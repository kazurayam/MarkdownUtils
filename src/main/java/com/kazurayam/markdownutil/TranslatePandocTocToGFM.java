package com.kazurayam.markdownutil;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class TranslatePandocTocToGFM {

    private TranslatePandocTocToGFM() {}

    /**
     * a Regular Expression that matches a string like
     * <PRE>
     * -    [foo](#_bar_baz)
     * </PRE>
     */
    static final String PTN_LEAD = "\\s*-\\s+";
    static final String PTN_TITLE = "[^\\]]*";
    public static final String PTN_HEADER = "(" + PTN_LEAD + "\\[" + PTN_TITLE + "\\]" + ")";

    static final String PTN_LINK_PREFIX = "#_";
    static final String PTN_ID = "[^\\)]*";
    static final String PTN_LINK = "\\(" + PTN_LINK_PREFIX + "(" + PTN_ID + ")" + "\\)";

    public static final String PTN_TOC_LINE = "^" + PTN_HEADER + PTN_LINK + "$";
    private static final Pattern pattern = Pattern.compile(PTN_TOC_LINE);

    /**
     * Translate a line of "Table of content" generated by Pandoc into
     * a string compliant to GitHub Flavoured Markdown.
     *
     * @param line a line from README.md file
     */
    public static String translate(String line) {
        Matcher m = pattern.matcher(line);
        if (m.matches()) {
            return m.group(1) + "(#" + m.group(2).replace("_", "-") + ")";
        } else {
            return line;
        }
    }

}
